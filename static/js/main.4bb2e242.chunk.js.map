{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","homeScore","setHomeScore","awayScore","setAwayScore","className","onClick","prev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA4CeA,MAzCf,WACE,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAOA,OACE,sBAAKC,UAAU,MAAf,UACE,kCACE,gCACE,+BACE,oBAAIA,UAAU,OAAd,qBACA,oBAAIA,UAAU,OAAd,0BAGJ,gCACE,+BACE,oBAAIC,QAAS,kBAAMJ,GAAa,SAACK,GAAD,OAAUA,EAAO,MAAjD,SACGN,IAEH,oBAAIK,QAAS,kBAAMF,GAAa,SAACG,GAAD,OAAUA,EAAO,MAAjD,SACGJ,SAIP,gCACE,+BACE,oBAAIG,QAAS,kBAAMJ,GAAa,SAACK,GAAD,OAAUA,EAAO,MAAjD,eACA,oBAAID,QAAS,kBAAMF,GAAa,SAACG,GAAD,OAAUA,EAAO,MAAjD,uBAKN,wBAAQD,QAhCE,WACZJ,EAAa,GACbE,EAAa,IA8BX,+BC3BSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4bb2e242.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [homeScore, setHomeScore] = useState(0);\n  const [awayScore, setAwayScore] = useState(0);\n\n  const reset = () => {\n    setHomeScore(0);\n    setAwayScore(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <table>\n        <thead>\n          <tr>\n            <th className=\"home\">Tiimi 1</th>\n            <th className=\"away\">Tiimi 2</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td onClick={() => setHomeScore((prev) => prev + 1)}>\n              {homeScore}\n            </td>\n            <td onClick={() => setAwayScore((prev) => prev + 1)}>\n              {awayScore}\n            </td>\n          </tr>\n        </tbody>\n        <tfoot>\n          <tr>\n            <td onClick={() => setHomeScore((prev) => prev - 1)}>-</td>\n            <td onClick={() => setAwayScore((prev) => prev - 1)}>-</td>\n          </tr>\n        </tfoot>\n      </table>\n\n      <button onClick={reset}>Tyhjätä</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}